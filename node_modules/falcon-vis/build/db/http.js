import { tableFromIPC } from "apache-arrow";
import { compactQuery } from "../util";
import { SQLDB } from "./sql";
export class HttpDB extends SQLDB {
    constructor(url, table, encodeGETQuery = encodeURIComponent, nameMap) {
        super(table, nameMap);
        this.url = url;
        this.encodeGETQuery = encodeGETQuery;
        this.blocking = false;
    }
    async query(q) {
        const t0 = performance.now();
        const escapedQuery = this.encodeGETQuery(q);
        /**
         * @todo consider using POST so I don't have to do this encodeURI bs
         */
        const query = await fetch(`${this.url}${escapedQuery}`);
        if (!query.ok)
            throw new Error(`HTTP ${query.status}: ${query.statusText}`);
        const buffer = await query.arrayBuffer();
        const table = tableFromIPC(buffer);
        console.info(`%c${compactQuery(q)}`, "color: #bbb", "\nRows:", table.numRows, "Query time:", performance.now() - t0, "ms.");
        return table;
    }
}
//# sourceMappingURL=http.js.map