export declare class BitSet {
    readonly length: number;
    private _bits;
    constructor(length: number, bits?: Uint32Array);
    get(i: number): boolean;
    get bits(): Uint32Array;
    set(i: number, v: boolean): this;
    union(other: BitSet): void;
    [Symbol.iterator](): Generator<boolean, void, unknown>;
}
/**
 * Compute the union of all bit sets. The sets need to have the same length.
 * If you only pass in a single bit set, this function will not make a copy.
 */
export declare function union(...sets: BitSet[]): BitSet | null;
