import { View, View1D } from "./index";
/**
 * Collections of views
 * Assumes that views are unique and distinct (we don't have the same view twice here)
 */
export declare class ViewSet {
    views: View[];
    constructor();
    remove(viewToRemove: View): void;
    /**
     * adds view to collections
     * if view already in collection does not add it
     */
    add(viewToSave: View): void;
    /**
     * @returns all the views that are not active (meaning passive)
     */
    get passive(): View[];
    /**
     * @returns the only active view, undefined if didn't find it
     */
    get active(): View1D | undefined;
    get size(): number;
    forEach(eachView: (view: View, index: number) => void): void;
    [Symbol.iterator](): Iterator<View>;
}
